{
  "openapi": "3.0.1",
  "info": {
    "title": "DebtManager API",
    "version": "v1"
  },
  "paths": {
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/update-cloud-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudPasswordResetDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudPasswordResetDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloudPasswordResetDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Email/send": {
      "post": {
        "tags": [
          "Email"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Gemini/generate": {
      "post": {
        "tags": [
          "Gemini"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeminiRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GeminiRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GeminiRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Gemini/analyze-receipt": {
      "post": {
        "tags": [
          "Gemini"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeminiRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GeminiRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GeminiRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Gemini/bulk-add": {
      "post": {
        "tags": [
          "Gemini"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeminiRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GeminiRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GeminiRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnalyticsCustomerStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Category": {
        "required": [
          "name",
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parentCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "syncStatus": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CloudPasswordResetDto": {
        "required": [
          "email",
          "newPassword",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "CurrencyType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Customer": {
        "required": [
          "name",
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "phoneNumber": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "debtLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time"
          },
          "inactivityPeriodDays": {
            "type": "integer",
            "format": "int32"
          },
          "syncStatus": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "nullable": true
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sale"
            },
            "nullable": true
          },
          "analyticsStatus": {
            "$ref": "#/components/schemas/AnalyticsCustomerStatus"
          },
          "status": {
            "$ref": "#/components/schemas/AnalyticsCustomerStatus"
          }
        },
        "additionalProperties": false
      },
      "DateOnly": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "dayNumber": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "EmailRequestDto": {
        "required": [
          "body",
          "subject",
          "to"
        ],
        "type": "object",
        "properties": {
          "to": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "subject": {
            "minLength": 1,
            "type": "string"
          },
          "body": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GeminiRequestDto": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Organization": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          },
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sale"
            },
            "nullable": true
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            },
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/OrganizationSettings"
          }
        },
        "additionalProperties": false
      },
      "OrganizationSettings": {
        "required": [
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "shopName": {
            "type": "string",
            "nullable": true
          },
          "logoPath": {
            "type": "string",
            "nullable": true
          },
          "overdueDays": {
            "type": "integer",
            "format": "int32"
          },
          "theme": {
            "type": "string",
            "nullable": true
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "additionalProperties": false
      },
      "Product": {
        "required": [
          "name",
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "sku": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sellingPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "stockQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lowStockThreshold": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "supplier": {
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "syncStatus": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "saleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Sale": {
        "required": [
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "saleDate": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "isPaid": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "syncStatus": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "saleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "saleId": {
            "type": "integer",
            "format": "int32"
          },
          "sale": {
            "$ref": "#/components/schemas/Sale"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SyncStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Transaction": {
        "required": [
          "amount",
          "currency",
          "customerId",
          "organizationId",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "receiptId": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "syncStatus": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TransactionType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "User": {
        "required": [
          "passwordHash",
          "role",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "passwordHash": {
            "minLength": 1,
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "passwordResetToken": {
            "type": "string",
            "nullable": true
          },
          "resetTokenExpiry": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "additionalProperties": false
      },
      "UserLoginDto": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserRegisterDto": {
        "required": [
          "email",
          "organizationName",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "organizationName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n              \t  Enter 'Bearer' [space] and then your token in the text input below.\r\n              \t  Example: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}